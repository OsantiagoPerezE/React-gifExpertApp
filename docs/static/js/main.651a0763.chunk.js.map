{"version":3,"sources":["helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/AddCategory.js","GifExpertApp.js","index.js"],"names":["getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","useState","loading","state","setState","useEffect","then","console","log","useFetchGifs","AddCategory","setCategories","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"4NAAaA,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVd,kBAafM,GAbe,4CAAH,sD,OCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAExC,OACC,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAAA,GAAa,IAAD,EACboB,mBAAS,CAClCb,KAAM,GACNc,SAAS,IAH6B,mBAChCC,EADgC,KACzBC,EADyB,KAgBvC,OAVAC,qBAAU,WACTzB,EAAQC,GAAUyB,MAAK,SAAAf,GACtBgB,QAAQC,IAAIjB,GACZa,EAAS,CACRhB,KAAMG,EACNW,SAAS,SAGT,CAACrB,IAEGsB,EDb2BM,CAAa5B,GAAjCa,EAD0B,EAChCN,KAAcc,EADkB,EAClBA,QAEtB,OACC,qCACC,oBAAIL,UAAU,oCAAd,SAAmDhB,IAElDqB,GAAW,mBAAGL,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACEH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,a,OEZdkB,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbV,mBAAS,IADI,mBAC1CW,EAD0C,KAC9BC,EAD8B,KAcjD,OACC,mCACC,sBAAMC,SAVa,SAAAC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BP,GAAc,SAAAQ,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKd,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdf,SAAAP,GACzBF,EAAcE,EAAEQ,OAAOF,eCHZG,EAAe,WAAO,IAAD,EACGvB,mBAAS,CAAC,gBADb,mBAC1BwB,EAD0B,KACdd,EADc,KAQjC,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BACEc,EAAWnC,KAAI,SAACT,EAAU6C,GAAX,OACf,cAAC,EAAD,CAAwB7C,SAAUA,GAApBA,YChBnB8C,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.651a0763.chunk.js","sourcesContent":["export const getGifs = async category => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n\t\tcategory\r\n\t)}&limit=10&api_key=lboLtNEMYgvfEcfk5EyiGCX7f6SPWP21`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\tconst gifs = data.map(img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\treturn gifs;\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\t//\tconsole.log(id, title, url);\r\n\treturn (\r\n\t\t<div className='card animate__animated animate__fadeIn'>\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n\t\t\t{loading && <p className='animate__animated animate__flash'>loading</p>}\r\n\t\t\t<div className='card-grid'>\r\n\t\t\t\t{images.map(img => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = category => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then(img => {\r\n\t\t\tconsole.log(img);\r\n\t\t\tsetState({\r\n\t\t\t\tdata: img,\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state; //data:[], loading:true\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = e => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\tconst handleSumbit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories(cats => [inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSumbit}>\r\n\t\t\t\t<input type='text' value={inputValue} onChange={handleInputChange} />\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { GifGrid } from './components/GifGrid';\r\nimport { AddCategory } from './components/AddCategory';\r\n\r\nexport const GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \t//\tsetCategories(['HunterXHunter', ...categories]);\r\n\t// \tsetCategories(cats => [...cats, 'HunterXHunter']);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category, i) => (\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp.js';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}